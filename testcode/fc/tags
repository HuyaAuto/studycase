!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CC	libcli/Doc/Makefile	/^CC = gcc$/;"	m	language:Make
CLITEST_PORT	cli/cli_cmd.h	14;"	d	language:C++
CLI_ERROR	libcli/libcli.h	8;"	d	language:C++
CLI_ERROR_ARG	libcli/libcli.h	10;"	d	language:C++
CLI_OK	libcli/libcli.h	7;"	d	language:C++
CLI_QUIT	libcli/libcli.h	9;"	d	language:C++
CMD_RANGE	libcli/libcli.c	790;"	d	language:C	file:
CTRL	libcli/libcli.h	96;"	d	language:C++
DEBUG	libcli/Doc/Makefile	/^DEBUG = -g$/;"	m	language:Make
DECIMAL_STRLEN_MAX	libcli/libcli.c	791;"	d	language:C	file:
DESTDIR	libcli/Doc/Makefile	/^DESTDIR =$/;"	m	language:Make
DES_PREFIX	libcli/libcli.c	1426;"	d	language:C	file:
ECFLAGS	cli/Makefile	/^ECFLAGS = -g -O0  -I$(SRCDIR)\/fc\/libcli  -I$(SRCDIR)\/fc\/md -I. #-Werror$/;"	m	language:Make
ECFLAGS	mp/Makefile	/^ECFLAGS = -g -O0  -I$(SRCDIR)\/fc\/md  -I. #-Werror$/;"	m	language:Make
ELDFLAGS	cli/Makefile	/^ELDFLAGS = -L $(SRCDIR)\/fc\/libcli -L $(SRCDIR)\/fc\/md$/;"	m	language:Make
ELDFLAGS	mp/Makefile	/^ELDFLAGS = -L $(SRCDIR)\/fc\/md$/;"	m	language:Make
IF_GROUP_NUM	md/md_ifgrp.h	17;"	d	language:C++
IF_MASK_NUM	md/md_ifgrp.h	24;"	d	language:C++
IF_MASK_NUM	md/md_ifgrp.h	26;"	d	language:C++
IF_MASK_T	md/md_ifgrp.h	/^typedef uint32_t  IF_MASK_T;$/;"	t	language:C++
IF_MASK_T	md/md_ifgrp.h	/^typedef uint64_t  IF_MASK_T;$/;"	t	language:C++
INVALID_IFGRP_WORK_INDEX	md/md_ifgrp.h	21;"	d	language:C++
INVALID_IFGRP_WORK_PRIORITY	md/md_ifgrp.h	20;"	d	language:C++
INVALID_IIFGRP	md/md_ifgrp.h	18;"	d	language:C++
INVALID_OIFGRP	md/md_ifgrp.h	19;"	d	language:C++
InQueue	md/md_embrave.c	/^void InQueue(queue* pQ, cvmx_wqe_t * cInData)$/;"	f	language:C	signature:(queue* pQ, cvmx_wqe_t * cInData)
InitQueue	md/md_embrave.c	/^void InitQueue(queue* pQ) $/;"	f	language:C	signature:(queue* pQ)
Introduction	libcli/Doc/developers.html	/^<H2><A NAME="Introduction">1.0 Introduction<\/A><\/H2>$/;"	a	language:HTML
Introduction	libcli/Doc/usersguide.html	/^<H2><A NAME="Introduction">Introduction<\/A><\/H2>$/;"	a	language:HTML
LDLIBS	cli/Makefile	/^LDLIBS  =   -lcli -lmd -lcrypt -lpthread$/;"	m	language:Make
LDLIBS	mp/Makefile	/^LDLIBS  =   -lmd -lcrypt -lpthread$/;"	m	language:Make
LIB	libcli/Doc/Makefile	/^LIB = libcli.so$/;"	m	language:Make
LIBCLI_HAS_ENABLE	libcli/libcli.h	20;"	d	language:C++
LIBS	libcli/Doc/Makefile	/^LIBS = -lcrypt$/;"	m	language:Make
MAJOR	libcli/Doc/Makefile	/^MAJOR = 1$/;"	m	language:Make
MATCH_INVERT	libcli/libcli.c	2373;"	d	language:C	file:
MATCH_REGEX	libcli/libcli.c	2372;"	d	language:C	file:
MAX_COPY_TO_TIMES	md/md_ifgrp.h	64;"	d	language:C++
MAX_CORE_NUM	md/md_config.h	7;"	d	language:C++
MAX_CORE_NUM	md/md_if.h	6;"	d	language:C++
MAX_EMBRAVE_NUM	md/md_embrave.h	5;"	d	language:C++
MAX_GRP_ACL	md/md_ifgrp.h	6;"	d	language:C++
MAX_HISTORY	libcli/libcli.h	12;"	d	language:C++
MAX_IF_GROUP_NUM	cli/ifgrp_cli.c	4;"	d	language:C	file:
MAX_IF_NUM	cli/ifgrp_cli.c	5;"	d	language:C	file:
MAX_IF_NUM	md/md_ifgrp.h	16;"	d	language:C++
MAX_WORK_PRIORITY	cli/ifgrp_cli.c	6;"	d	language:C	file:
MD5_PREFIX	libcli/libcli.c	1427;"	d	language:C	file:
MD_BUSY	md/md_type.h	/^    MD_BUSY,$/;"	e	language:C++	enum:__anon6
MD_DEBUG	md/md_type.h	/^    MD_DEBUG,$/;"	e	language:C++	enum:__anon6
MD_DIRECTION_FAIL	md/md_type.h	/^    MD_DIRECTION_FAIL,$/;"	e	language:C++	enum:__anon6
MD_EXCEED	md/md_type.h	/^    MD_EXCEED,$/;"	e	language:C++	enum:__anon6
MD_EXIST	md/md_type.h	/^    MD_EXIST,$/;"	e	language:C++	enum:__anon6
MD_FAIL	md/md_type.h	/^    MD_FAIL,$/;"	e	language:C++	enum:__anon6
MD_IF_GRP_WORK_ACL	md/md_ifgrp.h	/^    MD_IF_GRP_WORK_ACL,$/;"	e	language:C++	enum:__anon17
MD_IF_GRP_WORK_INVALID	md/md_ifgrp.h	/^    MD_IF_GRP_WORK_INVALID,$/;"	e	language:C++	enum:__anon17
MD_IF_GRP_WORK_IP	md/md_ifgrp.h	/^    MD_IF_GRP_WORK_IP,$/;"	e	language:C++	enum:__anon17
MD_IF_GRP_WORK_MAX	md/md_ifgrp.h	/^    MD_IF_GRP_WORK_MAX,$/;"	e	language:C++	enum:__anon17
MD_IF_GRP_WORK_PAYLOAD	md/md_ifgrp.h	/^    MD_IF_GRP_WORK_PAYLOAD,$/;"	e	language:C++	enum:__anon17
MD_IF_GRP_WORK_STRING	md/md_ifgrp.h	/^    MD_IF_GRP_WORK_STRING,$/;"	e	language:C++	enum:__anon17
MD_INIT	md/md_type.h	/^    MD_INIT,$/;"	e	language:C++	enum:__anon6
MD_IOCTL	md/md_type.h	/^    MD_IOCTL,$/;"	e	language:C++	enum:__anon6
MD_MAX	md/md_type.h	/^    MD_MAX$/;"	e	language:C++	enum:__anon6
MD_MEMORY	md/md_type.h	/^    MD_MEMORY,$/;"	e	language:C++	enum:__anon6
MD_NOSPACE	md/md_type.h	/^    MD_NOSPACE,$/;"	e	language:C++	enum:__anon6
MD_NOTFOUND	md/md_type.h	/^    MD_NOTFOUND,$/;"	e	language:C++	enum:__anon6
MD_OPEN	md/md_type.h	/^    MD_OPEN,$/;"	e	language:C++	enum:__anon6
MD_PARAM	md/md_type.h	/^    MD_PARAM,$/;"	e	language:C++	enum:__anon6
MD_PKT_TYPE_ETH	md/md_rule.h	/^    MD_PKT_TYPE_ETH,$/;"	e	language:C++	enum:__anon16
MD_PKT_TYPE_ETH_IP	md/md_rule.h	/^    MD_PKT_TYPE_ETH_IP,$/;"	e	language:C++	enum:__anon16
MD_PKT_TYPE_ETH_IP_SCTP	md/md_rule.h	/^    MD_PKT_TYPE_ETH_IP_SCTP,$/;"	e	language:C++	enum:__anon16
MD_PKT_TYPE_ETH_IP_TCP	md/md_rule.h	/^    MD_PKT_TYPE_ETH_IP_TCP,$/;"	e	language:C++	enum:__anon16
MD_PKT_TYPE_ETH_IP_UDP	md/md_rule.h	/^    MD_PKT_TYPE_ETH_IP_UDP,$/;"	e	language:C++	enum:__anon16
MD_PKT_TYPE_UNKNOWN	md/md_rule.h	/^    MD_PKT_TYPE_UNKNOWN,$/;"	e	language:C++	enum:__anon16
MD_PTR_TO_PHYS	md/md_ifgrp.c	369;"	d	language:C	file:
MD_PTR_TO_PHYS	md/md_ifgrp.c	371;"	d	language:C	file:
MD_RULE_ACTION_COPYTO	md/md_rule.c	/^    MD_RULE_ACTION_COPYTO = 8,$/;"	e	language:C	enum:__anon18	file:
MD_RULE_ACTION_DROP	md/md_rule.c	/^    MD_RULE_ACTION_DROP   = 1,$/;"	e	language:C	enum:__anon18	file:
MD_RULE_ACTION_FWD	md/md_rule.c	/^    MD_RULE_ACTION_FWD    = 2,$/;"	e	language:C	enum:__anon18	file:
MD_RULE_ACTION_MIRROR	md/md_rule.c	/^    MD_RULE_ACTION_MIRROR = 4,$/;"	e	language:C	enum:__anon18	file:
MD_RULE_ACTION_PERMIT	md/md_rule.c	/^    MD_RULE_ACTION_PERMIT = 16,$/;"	e	language:C	enum:__anon18	file:
MD_SUCCESS	md/md_type.h	/^    MD_SUCCESS,$/;"	e	language:C++	enum:__anon6
MD_TIMEOUT	md/md_type.h	/^    MD_TIMEOUT,$/;"	e	language:C++	enum:__anon6
MD_UNMATCH	md/md_type.h	/^    MD_UNMATCH,$/;"	e	language:C++	enum:__anon6
MD_UNREGISTER	md/md_type.h	/^    MD_UNREGISTER,$/;"	e	language:C++	enum:__anon6
MD_UNSUPPORT	md/md_type.h	/^    MD_UNSUPPORT,$/;"	e	language:C++	enum:__anon6
MINOR	libcli/Doc/Makefile	/^MINOR = 9$/;"	m	language:Make
MODE_ANY	libcli/libcli.h	16;"	d	language:C++
MODE_CONFIG	libcli/libcli.h	18;"	d	language:C++
MODE_CONFIG_INT	cli/cli_cmd.h	15;"	d	language:C++
MODE_EXEC	libcli/libcli.h	17;"	d	language:C++
MPP_MAX_IF_NUM	md/md_if.h	7;"	d	language:C++
MPP_VLAN_ADD	md/md_wqe.h	84;"	d	language:C++
MPP_VLAN_DEL	md/md_wqe.h	85;"	d	language:C++
MPP_VLAN_DO_NOTHING	md/md_wqe.h	83;"	d	language:C++
MPP_VLAN_TAG_MASK	md/md_wqe.h	86;"	d	language:C++
MaxSize	md/md_embrave.h	6;"	d	language:C++
OIF_GRP_HASH_DIP	md/md_ifgrp.h	/^    OIF_GRP_HASH_DIP,$/;"	e	language:C++	enum:oif_grp_hash_t
OIF_GRP_HASH_FIVE_TUPLE	md/md_ifgrp.h	/^    OIF_GRP_HASH_FIVE_TUPLE,$/;"	e	language:C++	enum:oif_grp_hash_t
OIF_GRP_HASH_MAX	md/md_ifgrp.h	/^    OIF_GRP_HASH_MAX,$/;"	e	language:C++	enum:oif_grp_hash_t
OIF_GRP_HASH_SDIP	md/md_ifgrp.h	/^    OIF_GRP_HASH_SDIP,$/;"	e	language:C++	enum:oif_grp_hash_t
OIF_GRP_HASH_SIP	md/md_ifgrp.h	/^    OIF_GRP_HASH_SIP,$/;"	e	language:C++	enum:oif_grp_hash_t
OIF_GRP_HASH_USER_INTEGRITY	md/md_ifgrp.h	/^    OIF_GRP_HASH_USER_INTEGRITY,$/;"	e	language:C++	enum:oif_grp_hash_t
OIF_GRP_MODE_HASH	md/md_ifgrp.h	/^    OIF_GRP_MODE_HASH,$/;"	e	language:C++	enum:oif_grp_mode_t
OIF_GRP_MODE_MAX	md/md_ifgrp.h	/^    OIF_GRP_MODE_MAX,$/;"	e	language:C++	enum:oif_grp_mode_t
OIF_GRP_MODE_ROUND_ROBIN	md/md_ifgrp.h	/^    OIF_GRP_MODE_ROUND_ROBIN,$/;"	e	language:C++	enum:oif_grp_mode_t
OIF_GRP_MODE_WEIGHT_HASH	md/md_ifgrp.h	/^    OIF_GRP_MODE_WEIGHT_HASH,$/;"	e	language:C++	enum:oif_grp_mode_t
OIF_GRP_MODE_WEIGHT_ROUND_ROBIN	md/md_ifgrp.h	/^    OIF_GRP_MODE_WEIGHT_ROUND_ROBIN,$/;"	e	language:C++	enum:oif_grp_mode_t
OIF_GRP_UP_PORT_MEMBER_MAX	md/md_ifgrp.h	90;"	d	language:C++
OPTIM	libcli/Doc/Makefile	/^OPTIM = -O3$/;"	m	language:Make
OutQueue	md/md_embrave.c	/^cvmx_wqe_t * OutQueue(queue* pQ)$/;"	f	language:C	signature:(queue* pQ)
PATH	md/md_shm.c	7;"	d	language:C	file:
PATH	md/md_shm.h	3;"	d	language:C++
PLATFORM_X86	md/md_config.h	6;"	d	language:C++
PREFIX	libcli/Doc/Makefile	/^PREFIX = \/usr\/local$/;"	m	language:Make
PRINT_BUFFERED	libcli/libcli.h	24;"	d	language:C++
PRINT_FILTERED	libcli/libcli.h	23;"	d	language:C++
PRINT_PLAIN	libcli/libcli.h	22;"	d	language:C++
PRIVILEGE_PRIVILEGED	libcli/libcli.h	15;"	d	language:C++
PRIVILEGE_UNPRIVILEGED	libcli/libcli.h	14;"	d	language:C++
PROG	cli/Makefile	/^PROG    = clitest$/;"	m	language:Make
PROG	libcli/Makefile	/^PROG = cli$/;"	m	language:Make
PROG	md/Makefile	/^PROG = md$/;"	m	language:Make
PROG	mp/Makefile	/^PROG    = md$/;"	m	language:Make
REG_EXTENDED	libcli/libcli.c	91;"	d	language:C	file:
REG_ICASE	libcli/libcli.c	92;"	d	language:C	file:
REG_NOSUB	libcli/libcli.c	90;"	d	language:C	file:
REVISION	libcli/Doc/Makefile	/^REVISION = 3$/;"	m	language:Make
SIZE_OF_EPIF_ENRTY	md/md_if.h	36;"	d	language:C++
SSN_INDEX_INVALID	md/md_wqe.h	147;"	d	language:C++
SSN_INDEX_INVALID	md/md_wqe.h	71;"	d	language:C++
STATE_ENABLE	libcli/libcli.h	/^    STATE_ENABLE$/;"	e	language:C++	enum:cli_states
STATE_ENABLE_PASSWORD	libcli/libcli.h	/^    STATE_ENABLE_PASSWORD,$/;"	e	language:C++	enum:cli_states
STATE_LOGIN	libcli/libcli.h	/^    STATE_LOGIN,$/;"	e	language:C++	enum:cli_states
STATE_NORMAL	libcli/libcli.h	/^    STATE_NORMAL,$/;"	e	language:C++	enum:cli_states
STATE_PASSWORD	libcli/libcli.h	/^    STATE_PASSWORD,$/;"	e	language:C++	enum:cli_states
TOC	libcli/Doc/developers.html	/^<H2><A NAME="TOC">Table of Contents<\/A><\/H2>$/;"	a	language:HTML
TOC	libcli/Doc/usersguide.html	/^<H2><A NAME="TOC">Table of Contents<\/A><\/H2>$/;"	a	language:HTML
UINT64_BIT_NUM	md/md_ifgrp.h	13;"	d	language:C++
UINT64_BIT_NUM	md/md_ifgrp.h	9;"	d	language:C++
UNUSED	cli/cli_cmd.h	18;"	d	language:C++
UNUSED	cli/cli_cmd.h	20;"	d	language:C++
UNUSED	libcli/libcli.c	25;"	d	language:C	file:
UNUSED	libcli/libcli.c	27;"	d	language:C	file:
_GNU_SOURCE	libcli/libcli.c	6;"	d	language:C	file:
__CLI_CMD_INCLUDE__	cli/cli_cmd.h	2;"	d	language:C++
__EMBRAVE_CLI_INCLUDE__	cli/embrave_cli.h	3;"	d	language:C++
__IFGRP_CLI_INCLUDE__	cli/ifgrp_cli.h	3;"	d	language:C++
__IF_CLI_INCLUDE__	cli/if_cli.h	3;"	d	language:C++
__LIBCLI_H__	libcli/libcli.h	2;"	d	language:C++
__MD_CONFIG_INCLUDE__	md/md_config.h	2;"	d	language:C++
__MD_EMBRAVE_INCLUDE__	md/md_embrave.h	3;"	d	language:C++
__MD_GRP_INCLUDE__	md/md_ifgrp.h	5;"	d	language:C++
__MD_IF_INCLUDE__	md/md_if.h	4;"	d	language:C++
__MD_INIT_INCLUDE__	md/md_init.h	5;"	d	language:C++
__MD_RULE_INCLUDE__	md/md_rule.h	4;"	d	language:C++
__MD_SHM_INCLUDE__	md/md_shm.h	2;"	d	language:C++
__MD_STS_INCLUDE__	md/md_sts.h	3;"	d	language:C++
__MD_TYPE_INCLUDE__	md/md_type.h	2;"	d	language:C++
__MD_WQE_INCLUDE__	md/md_wqe.h	2;"	d	language:C++
__STS_CLI_INCLUDE__	cli/sts_cli.h	3;"	d	language:C++
_print	libcli/libcli.c	/^static void _print(struct cli_def *cli, int print_mode, char *format, va_list ap)$/;"	f	language:C	file:	signature:(struct cli_def *cli, int print_mode, char *format, va_list ap)
acl_callback	md/md_ifgrp.h	/^    if_grp_acl_callback  acl_callback;$/;"	m	language:C++	struct:if_grp_work_table_t
action	md/md_wqe.h	/^    uint8_t action;$/;"	m	language:C++	struct:mpp_control
application_main_loop	md/md_rule.c	/^int application_main_loop(void)$/;"	f	language:C	signature:(void)
asprintf	libcli/libcli.c	/^int asprintf(char **strp, const char *fmt, ...) {$/;"	f	language:C	signature:(char **strp, const char *fmt, ...)
auditid	md/md_if.h	/^            uint64_t     auditid                    :4;  \/* Maxinum 16 audit group(s) *\/ $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
auth	libcli/Doc/developers.html	/^<H2><A NAME="auth">2.0 Authentication<\/A><\/H2>$/;"	a	language:HTML
auth_callback	libcli/libcli.h	/^    int (*auth_callback)(char *, char *);$/;"	m	language:C++	struct:cli_def
backepif	md/md_if.h	/^            uint64_t     backepif                   :8;   \/* backup interface *\/    $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
banner	libcli/libcli.h	/^    char *banner;$/;"	m	language:C++	struct:cli_def
board_type_index	md/md_if.h	/^            uint64_t     board_type_index           :3;   \/* board type index *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
buf_size	libcli/libcli.h	/^    unsigned buf_size;$/;"	m	language:C++	struct:cli_def
buffer	libcli/libcli.h	/^    char *buffer;$/;"	m	language:C++	struct:cli_def
cBuff	md/md_embrave.h	/^    cvmx_wqe_t *cBuff[MaxSize];$/;"	m	language:C++	struct:__anon15
callback	libcli/libcli.h	/^    int (*callback)(struct cli_def *, char *, char **, int, int);$/;"	m	language:C++	struct:cli_command
card	md/md_if.h	/^            uint64_t     card                       :2;   \/* card number, like slot\/card\/index *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
check_auth	cli/cli_cmd.c	/^int check_auth(char *username, char *password)$/;"	f	language:C	signature:(char *username, char *password)
check_enable	cli/cli_cmd.c	/^int check_enable(char *password)$/;"	f	language:C	signature:(char *password)
children	libcli/libcli.h	/^    struct cli_command *children;$/;"	m	language:C++	struct:cli_command	typeref:struct:cli_command::cli_command
cifgrp_cmd_bind_work	cli/ifgrp_cli.c	/^static int cifgrp_cmd_bind_work (struct cli_def *cli, char *command, char *argv[], int argc, int flag)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc, int flag)
cifgrp_cmd_del_init	cli/ifgrp_cli.c	/^int cifgrp_cmd_del_init( struct cli_def *cli, struct cli_command *root)$/;"	f	language:C	signature:( struct cli_def *cli, struct cli_command *root)
cifgrp_cmd_init	cli/ifgrp_cli.c	/^int cifgrp_cmd_init( struct cli_def *cli)$/;"	f	language:C	signature:( struct cli_def *cli)
cifgrp_cmd_restore_priority	cli/ifgrp_cli.c	/^static int cifgrp_cmd_restore_priority (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
cifgrp_cmd_set_priority	cli/ifgrp_cli.c	/^static int cifgrp_cmd_set_priority (struct cli_def *cli, char *command, char *argv[], int argc, int flag)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc, int flag)
cifgrp_cmd_show	cli/ifgrp_cli.c	/^static int cifgrp_cmd_show (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
cifgrp_cmd_show_all	cli/ifgrp_cli.c	/^static int cifgrp_cmd_show_all (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
cifgrp_cmd_show_init	cli/ifgrp_cli.c	/^int cifgrp_cmd_show_init( struct cli_def *cli, struct cli_command *root)$/;"	f	language:C	signature:( struct cli_def *cli, struct cli_command *root)
cifgrp_cmd_unbind_work	cli/ifgrp_cli.c	/^static int cifgrp_cmd_unbind_work (struct cli_def *cli, char *command, char *argv[], int argc, int flag)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc, int flag)
cli	cli/cli_cmd.c	/^struct cli_def *cli = NULL;$/;"	v	language:C	typeref:struct:cli_def
cli_add_history	libcli/libcli.c	/^int cli_add_history(struct cli_def *cli, char *cmd)$/;"	f	language:C	signature:(struct cli_def *cli, char *cmd)
cli_allow_enable	libcli/Doc/developers.html	/^<H3><A NAME="cli_allow_enable">4.17 cli_allow_enable(<EM>struct cli_def *cli, char *password<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_allow_enable	libcli/libcli.c	/^void cli_allow_enable(struct cli_def *cli, char *password)$/;"	f	language:C	signature:(struct cli_def *cli, char *password)
cli_allow_user	libcli/Doc/developers.html	/^<H3><A NAME="cli_allow_user">4.7 cli_allow_user(<EM>struct cli_def *cli, char *username, char *password<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_allow_user	libcli/libcli.c	/^void cli_allow_user(struct cli_def *cli, char *username, char *password)$/;"	f	language:C	signature:(struct cli_def *cli, char *username, char *password)
cli_bufprint	libcli/libcli.c	/^void cli_bufprint(struct cli_def *cli, char *format, ...)$/;"	f	language:C	signature:(struct cli_def *cli, char *format, ...)
cli_build_shortest	libcli/libcli.c	/^static int cli_build_shortest(struct cli_def *cli, struct cli_command *commands)$/;"	f	language:C	file:	signature:(struct cli_def *cli, struct cli_command *commands)
cli_clear_line	libcli/libcli.c	/^void cli_clear_line(int sockfd, char *cmd, int l, int cursor)$/;"	f	language:C	signature:(int sockfd, char *cmd, int l, int cursor)
cli_cmdline_register	cli/cli_cmd.c	/^int cli_cmdline_register ( struct cli_def *cli )$/;"	f	language:C	signature:( struct cli_def *cli )
cli_command	libcli/libcli.h	/^struct cli_command {$/;"	s	language:C++
cli_command_name	libcli/libcli.c	/^char *cli_command_name(struct cli_def *cli, struct cli_command *command)$/;"	f	language:C	signature:(struct cli_def *cli, struct cli_command *command)
cli_configure	cli/cli_cmd.c	/^int cli_configure ( struct cli_def *cli )$/;"	f	language:C	signature:( struct cli_def *cli )
cli_count_filter	libcli/libcli.c	/^int cli_count_filter(struct cli_def *cli, char *string, void *data)$/;"	f	language:C	signature:(struct cli_def *cli, char *string, void *data)
cli_count_filter_init	libcli/libcli.c	/^int cli_count_filter_init(struct cli_def *cli, int argc, UNUSED(char **argv), struct cli_filter *filt)$/;"	f	language:C	signature:(struct cli_def *cli, int argc, UNUSED(char **argv), struct cli_filter *filt)
cli_def	libcli/libcli.h	/^struct cli_def {$/;"	s	language:C++
cli_deny_user	libcli/Doc/developers.html	/^<H3><A NAME="cli_deny_user">4.8 cli_deny_user(<EM>struct cli_def *cli, char *username<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_deny_user	libcli/libcli.c	/^void cli_deny_user(struct cli_def *cli, char *username)$/;"	f	language:C	signature:(struct cli_def *cli, char *username)
cli_done	libcli/Doc/developers.html	/^<H3><A NAME="cli_done">4.2 cli_done(<EM>struct cli_def *cli<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_done	libcli/libcli.c	/^int cli_done(struct cli_def *cli)$/;"	f	language:C	signature:(struct cli_def *cli)
cli_error	libcli/Doc/developers.html	/^<H3><A NAME="cli_error">4.13 cli_error(<EM>struct cli_def *cli, char *format, ...<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_error	libcli/libcli.c	/^void cli_error(struct cli_def *cli, char *format, ...)$/;"	f	language:C	signature:(struct cli_def *cli, char *format, ...)
cli_file	libcli/Doc/developers.html	/^<H3><A NAME="cli_file">4.12 cli_file(<EM>struct cli_def *cli, FILE *f, int privilege, int mode<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_file	libcli/libcli.c	/^int cli_file(struct cli_def *cli, FILE *fh, int privilege, int mode)$/;"	f	language:C	signature:(struct cli_def *cli, FILE *fh, int privilege, int mode)
cli_filter	libcli/libcli.h	/^struct cli_filter {$/;"	s	language:C++
cli_filter_cmds	libcli/libcli.h	/^struct cli_filter_cmds$/;"	s	language:C++
cli_find_command	libcli/libcli.c	/^static int cli_find_command ( struct cli_def * cli, struct cli_command * commands, int num_words, char * words[], int start_word, int filters[] )$/;"	f	language:C	file:	signature:( struct cli_def * cli, struct cli_command * commands, int num_words, char * words[], int start_word, int filters[] )
cli_free_command	libcli/libcli.c	/^static void cli_free_command(struct cli_command *cmd)$/;"	f	language:C	file:	signature:(struct cli_command *cmd)
cli_free_history	libcli/libcli.c	/^void cli_free_history(struct cli_def *cli)$/;"	f	language:C	signature:(struct cli_def *cli)
cli_get_completions	libcli/libcli.c	/^int cli_get_completions(struct cli_def *cli, char *command, char **completions, int max_completions)$/;"	f	language:C	signature:(struct cli_def *cli, char *command, char **completions, int max_completions)
cli_init	libcli/Doc/developers.html	/^<H3><A NAME="cli_init">4.1 cli_init()<\/A><\/H3>$/;"	a	language:HTML
cli_init	libcli/libcli.c	/^struct cli_def *cli_init()$/;"	f	language:C
cli_int_configure_terminal	libcli/libcli.c	/^int cli_int_configure_terminal(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))
cli_int_disable	libcli/libcli.c	/^int cli_int_disable(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))
cli_int_enable	libcli/libcli.c	/^int cli_int_enable(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))
cli_int_exit	libcli/libcli.c	/^int cli_int_exit(struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
cli_int_help	libcli/libcli.c	/^int cli_int_help(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))
cli_int_history	libcli/libcli.c	/^int cli_int_history(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))
cli_int_quit	libcli/libcli.c	/^int cli_int_quit(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))
cli_loop	cli/cli_cmd.c	/^int cli_loop(void *_param)$/;"	f	language:C	signature:(void *_param)
cli_loop	libcli/Doc/developers.html	/^<H3><A NAME="cli_loop">4.5 cli_loop(<EM>struct cli_def *cli, int sockfd<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_match_filter_init	libcli/libcli.c	/^int cli_match_filter_init(struct cli_def *cli, int argc, char **argv, struct cli_filter *filt)$/;"	f	language:C	signature:(struct cli_def *cli, int argc, char **argv, struct cli_filter *filt)
cli_match_filter_state	libcli/libcli.c	/^struct cli_match_filter_state$/;"	s	language:C	file:
cli_parse_line	libcli/libcli.c	/^static int cli_parse_line(char *line, char *words[], int max_words)$/;"	f	language:C	file:	signature:(char *line, char *words[], int max_words)
cli_print	libcli/Doc/developers.html	/^<H3><A NAME="cli_print">4.13 cli_print(<EM>struct cli_def *cli, char *format, ...<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_print	libcli/libcli.c	/^void cli_print(struct cli_def *cli, char *format, ...)$/;"	f	language:C	signature:(struct cli_def *cli, char *format, ...)
cli_print_callback	libcli/Doc/developers.html	/^<H3><A NAME="cli_print_callback">4.15 cli_print_callback(<EM>struct cli_def *cli, void (*callback)(struct cli_def *, char *)<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_print_callback	libcli/libcli.c	/^void cli_print_callback(struct cli_def *cli, void (*callback)(struct cli_def *, char *))$/;"	f	language:C	signature:(struct cli_def *cli, void (*callback)(struct cli_def *, char *))
cli_range_filter_init	libcli/libcli.c	/^int cli_range_filter_init(struct cli_def *cli, int argc, char **argv, struct cli_filter *filt)$/;"	f	language:C	signature:(struct cli_def *cli, int argc, char **argv, struct cli_filter *filt)
cli_range_filter_state	libcli/libcli.c	/^struct cli_range_filter_state {$/;"	s	language:C	file:
cli_register_command	libcli/Doc/developers.html	/^<H3><A NAME="cli_register_command">4.3 cli_register_command(<EM>struct cli_def *cli, struct cli_command *parent, char *command, int (*callback)(struct cli_def *, char *, char **, int), int privilege, int mode, char *help<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_register_command	libcli/libcli.c	/^struct cli_command *cli_register_command(struct cli_def *cli,$/;"	f	language:C	signature:(struct cli_def *cli, struct cli_command *parent, char *command, int (*callback)(struct cli_def *cli, char *, char **, int), int privilege, int mode, char *help)
cli_register_command_f	libcli/libcli.c	/^struct cli_command *cli_register_command_f ( struct cli_def *cli,$/;"	f	language:C	signature:( struct cli_def *cli, struct cli_command *parent, const char *command, int ( *callback ) ( struct cli_def *cli, char *, char **, int, int ), int privilege, int mode, const char *help, int flag )
cli_regular	libcli/Doc/developers.html	/^<H3><A NAME="cli_regular">4.11 cli_regular(<EM>struct cli_def *cli, int(*callback)(struct cli_def *)<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_regular	libcli/libcli.c	/^void cli_regular(struct cli_def *cli, int (*callback)(struct cli_def *cli))$/;"	f	language:C	signature:(struct cli_def *cli, int (*callback)(struct cli_def *cli))
cli_regular_interval	libcli/libcli.c	/^void cli_regular_interval(struct cli_def *cli, int seconds)$/;"	f	language:C	signature:(struct cli_def *cli, int seconds)
cli_reprompt	libcli/libcli.c	/^void cli_reprompt(struct cli_def *cli)$/;"	f	language:C	signature:(struct cli_def *cli)
cli_run_command	libcli/libcli.c	/^int cli_run_command(struct cli_def *cli, char *command)$/;"	f	language:C	signature:(struct cli_def *cli, char *command)
cli_set_auth_callback	libcli/Doc/developers.html	/^<H3><A NAME="cli_set_auth_callback">4.6 cli_set_auth_callback(<EM>struct cli_def *cli, int (*auth_callback)(char *, char *)<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_set_auth_callback	libcli/libcli.c	/^void cli_set_auth_callback(struct cli_def *cli, int (*auth_callback)(char *, char *))$/;"	f	language:C	signature:(struct cli_def *cli, int (*auth_callback)(char *, char *))
cli_set_banner	libcli/Doc/developers.html	/^<H3><A NAME="cli_set_banner">4.9 cli_set_banner(<EM>struct cli_def *cli, char *banner<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_set_banner	libcli/libcli.c	/^void cli_set_banner(struct cli_def *cli, char *banner)$/;"	f	language:C	signature:(struct cli_def *cli, char *banner)
cli_set_configmode	libcli/Doc/developers.html	/^<H3><A NAME="cli_set_configmode">4.18 cli_set_configmode(<EM>struct cli_def *cli, int mode, char *string<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_set_configmode	libcli/libcli.c	/^int cli_set_configmode(struct cli_def *cli, int mode, char *config_desc)$/;"	f	language:C	signature:(struct cli_def *cli, int mode, char *config_desc)
cli_set_enable_callback	libcli/Doc/developers.html	/^<H3><A NAME="cli_set_enable_callback">4.16 cli_set_enable_callback(<EM>struct cli_def *cli, void (*callback)(struct cli_def *, char *)<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_set_enable_callback	libcli/libcli.c	/^void cli_set_enable_callback(struct cli_def *cli, int (*enable_callback)(char *))$/;"	f	language:C	signature:(struct cli_def *cli, int (*enable_callback)(char *))
cli_set_hostname	libcli/Doc/developers.html	/^<H3><A NAME="cli_set_hostname">4.10 cli_set_hostname(<EM>struct cli_def *cli, char *hostname<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_set_hostname	libcli/libcli.c	/^void cli_set_hostname(struct cli_def *cli, char *hostname)$/;"	f	language:C	signature:(struct cli_def *cli, char *hostname)
cli_set_idle_timeout	libcli/libcli.c	/^void cli_set_idle_timeout(struct cli_def *cli, unsigned int seconds)$/;"	f	language:C	signature:(struct cli_def *cli, unsigned int seconds)
cli_set_modestring	libcli/libcli.c	/^void cli_set_modestring(struct cli_def *cli, char *modestring)$/;"	f	language:C	signature:(struct cli_def *cli, char *modestring)
cli_set_privilege	libcli/libcli.c	/^int cli_set_privilege(struct cli_def *cli, int priv)$/;"	f	language:C	signature:(struct cli_def *cli, int priv)
cli_set_promptchar	libcli/libcli.c	/^void cli_set_promptchar(struct cli_def *cli, char *promptchar)$/;"	f	language:C	signature:(struct cli_def *cli, char *promptchar)
cli_show_help	libcli/libcli.c	/^int cli_show_help(struct cli_def *cli, struct cli_command *c)$/;"	f	language:C	signature:(struct cli_def *cli, struct cli_command *c)
cli_states	libcli/libcli.h	/^enum cli_states {$/;"	g	language:C++
cli_unregister_all	libcli/libcli.c	/^void cli_unregister_all(struct cli_def *cli, struct cli_command *command)$/;"	f	language:C	signature:(struct cli_def *cli, struct cli_command *command)
cli_unregister_command	libcli/Doc/developers.html	/^<H3><A NAME="cli_unregister_command">4.4 cli_unregister_command(<EM>struct cli_def *cli, char *command<\/EM>)<\/A><\/H3>$/;"	a	language:HTML
cli_unregister_command	libcli/libcli.c	/^int cli_unregister_command(struct cli_def *cli, char *command)$/;"	f	language:C	signature:(struct cli_def *cli, char *command)
cli_vabufprint	libcli/libcli.c	/^void cli_vabufprint(struct cli_def *cli, char *format, va_list ap)$/;"	f	language:C	signature:(struct cli_def *cli, char *format, va_list ap)
client	libcli/libcli.h	/^    FILE *client;$/;"	m	language:C++	struct:cli_def
clientAddr	cli/cli_cmd.c	/^static struct sockaddr_in clientAddr;$/;"	v	language:C	typeref:struct:sockaddr_in	file:
clientSock	cli/cli_cmd.c	/^static int clientSock;$/;"	v	language:C	file:
clientThread	cli/cli_cmd.c	/^pthread_t clientThread;$/;"	v	language:C
cmd	libcli/libcli.h	/^    char *cmd;$/;"	m	language:C++	struct:cli_filter_cmds
cmd_config_int	cli/cli_cmd.c	/^int cmd_config_int(struct cli_def *cli, UNUSED(char *command), char *argv[],$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), char *argv[], int argc)
cmd_config_int_exit	cli/cli_cmd.c	/^int cmd_config_int_exit(struct cli_def *cli, UNUSED(char *command),$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), UNUSED(char *argv[]), UNUSED(int argc))
cmd_debug_regular	cli/cli_cmd.c	/^int cmd_debug_regular(struct cli_def *cli, UNUSED(char *command), char *argv[], int argc)$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), char *argv[], int argc)
cmd_init	cli/cli_cmd.c	/^void cmd_init( struct cli_def *cli)$/;"	f	language:C	signature:( struct cli_def *cli)
cmd_no_init	cli/cli_cmd.c	/^void cmd_no_init( struct cli_def *cli)$/;"	f	language:C	signature:( struct cli_def *cli)
cmd_range_match	libcli/libcli.c	/^cmd_range_match ( const char *range, const char *str )$/;"	f	language:C	file:	signature:( const char *range, const char *str )
cmd_set	cli/cli_cmd.c	/^int cmd_set(struct cli_def *cli, UNUSED(char *command), char *argv[],$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), char *argv[], int argc)
cmd_show_init	cli/cli_cmd.c	/^void cmd_show_init( struct cli_def *cli)$/;"	f	language:C	signature:( struct cli_def *cli)
cmd_show_regular	cli/cli_cmd.c	/^int cmd_show_regular(struct cli_def *cli, UNUSED(char *command), char *argv[], int argc)$/;"	f	language:C	signature:(struct cli_def *cli, UNUSED(char *command), char *argv[], int argc)
cmd_test	cli/cli_cmd.c	/^int cmd_test(struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
command	libcli/libcli.h	/^    char *command;$/;"	m	language:C++	struct:cli_command
commandname	libcli/libcli.h	/^    char *commandname;  \/\/ temporary buffer for cli_command_name() to prevent leak$/;"	m	language:C++	struct:cli_def
commands	libcli/libcli.h	/^    struct cli_command *commands;$/;"	m	language:C++	struct:cli_def	typeref:struct:cli_def::cli_command
completion_callback	libcli/libcli.h	/^    int completion_callback;$/;"	m	language:C++	struct:cli_def
conn	libcli/libcli.h	/^    void *conn;$/;"	m	language:C++	struct:cli_def
copyto_group	md/md_ifgrp.h	/^    copyto_grp          copyto_group[IF_GROUP_NUM];$/;"	m	language:C++	struct:mpp_if_group_t
copyto_grp	md/md_ifgrp.h	/^}copyto_grp;$/;"	t	language:C++	typeref:struct:copyto_grp_t
copyto_grp_t	md/md_ifgrp.h	/^typedef struct copyto_grp_t$/;"	s	language:C++
copyto_times	md/md_wqe.h	/^    uint8_t copyto_times;$/;"	m	language:C++	struct:mpp_control
copytogrp_show_one	cli/ifgrp_cli.c	/^void copytogrp_show_one(struct cli_def *cli, uint8_t grp_id)$/;"	f	language:C	signature:(struct cli_def *cli, uint8_t grp_id)
count	md/md_embrave.h	/^    int  in,out,count;$/;"	m	language:C++	struct:__anon15
cvmx_pow_work_request_sync	md/md_embrave.c	/^cvmx_wqe_t * cvmx_pow_work_request_sync(void)$/;"	f	language:C	signature:(void)
cvmx_wqe_t	md/md_wqe.h	/^}  CVMX_CACHE_LINE_ALIGNED cvmx_wqe_t;$/;"	t	language:C++	typeref:struct:__anon2
cvmx_wqe_t	md/md_wqe.h	/^} cvmx_wqe_t;$/;"	t	language:C++	typeref:struct:__anon5
data	libcli/libcli.h	/^    void *data;$/;"	m	language:C++	struct:cli_filter
data	md/md_if.h	/^        uint64_t    data[SIZE_OF_EPIF_ENRTY];$/;"	m	language:C++	union:mpp_epif_entry_t::__anon13
data_64	md/md_if.h	/^        uint64_t        data_64[16];$/;"	m	language:C++	union:mpp_if_stat_t::__anon11
debug_regular	cli/cli_cmd.c	/^unsigned int debug_regular = 0;$/;"	v	language:C
display_usage	cli/cli_main.c	/^void display_usage( char *process )$/;"	f	language:C	signature:( char *process )
dn_port_num	md/md_ifgrp.h	/^    uint32_t                dn_port_num;         \/* link down port number *\/$/;"	m	language:C++	struct:oif_grp_t
dupl_num	md/md_wqe.h	/^    int32_t  dupl_num;       \/* copy to times *\/$/;"	m	language:C++	struct:mpp_control
editing	libcli/Doc/usersguide.html	/^<H2><A NAME="editing">Command-Line Editing<\/A><\/H2>$/;"	a	language:HTML
embrave_cmd_init	cli/embrave_cli.c	/^int embrave_cmd_init( struct cli_def *cli)$/;"	f	language:C	signature:( struct cli_def *cli)
embrave_cmd_start	cli/embrave_cli.c	/^static int embrave_cmd_start (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
enable_callback	libcli/libcli.h	/^    int (*enable_callback)(char *);$/;"	m	language:C++	struct:cli_def
enable_password	libcli/libcli.h	/^    char *enable_password;$/;"	m	language:C++	struct:cli_def
epif	md/md_init.h	/^    mpp_epif                epif;$/;"	m	language:C++	struct:mpp_shared_data
filter	libcli/libcli.h	/^    int (*filter)(struct cli_def *cli, char *string, void *data);$/;"	m	language:C++	struct:cli_filter
filter_cmds	libcli/libcli.c	/^static struct cli_filter_cmds filter_cmds[] =$/;"	v	language:C	typeref:struct:cli_filter_cmds	file:
filters	libcli/Doc/usersguide.html	/^<H2><A NAME="filters">Filters<\/A><\/H2>$/;"	a	language:HTML
filters	libcli/libcli.h	/^    struct cli_filter *filters;$/;"	m	language:C++	struct:cli_def	typeref:struct:cli_def::cli_filter
flag	libcli/libcli.h	/^    int flag;$/;"	m	language:C++	struct:cli_command
flag_3gpp_gb	md/md_if.h	/^            uint64_t     flag_3gpp_gb               :1;$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_3gpp_gn	md/md_if.h	/^            uint64_t     flag_3gpp_gn               :1; $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_big_sync	md/md_if.h	/^            uint64_t     flag_big_sync              :1;   \/* flag that length of tcp sync header >= 32bytes *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_clear_mpls	md/md_if.h	/^            uint64_t     flag_clear_mpls            :1;  $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_clear_vlan	md/md_if.h	/^            uint64_t     flag_clear_vlan            :1; $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_dmac_mask	md/md_if.h	/^            uint64_t     flag_dmac_mask             :1;   \/* modify dmac mask enable flag *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_mod_dmac	md/md_if.h	/^            uint64_t     flag_mod_dmac              :1;   \/* modify dmac enable flag *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_only_sync	md/md_if.h	/^            uint64_t     flag_only_sync             :1;   \/* tcp sync packet statistics enable flag *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_pppoe_with_vlan	md/md_if.h	/^            uint64_t     flag_pppoe_with_vlan       :1; $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_singlink	md/md_if.h	/^            uint64_t     flag_singlink              :1;   \/* 1 for link-forced, also called single fiber mode *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flag_time_stamp	md/md_if.h	/^            uint64_t     flag_time_stamp            :1;   \/* time stamp enable flag, write time stamp to dmac *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
flags	libcli/libcli.c	/^    int flags;$/;"	m	language:C	struct:cli_match_filter_state	file:
fprintf	libcli/libcli.c	/^int fprintf(FILE *stream, const char *fmt, ...) {$/;"	f	language:C	signature:(FILE *stream, const char *fmt, ...)
free	md/md_sts.h	/^    uint32_t free;$/;"	m	language:C++	struct:md_pkt_sts_t
free_z	libcli/libcli.h	98;"	d	language:C++
from	libcli/libcli.c	/^    char *from;$/;"	m	language:C	struct:cli_range_filter_state	file:
funcref	libcli/Doc/developers.html	/^<H2><A NAME="funcref">4.0 Function Reference<\/A><\/H2>$/;"	a	language:HTML
get	md/md_sts.h	/^    uint32_t get;$/;"	m	language:C++	struct:md_pkt_sts_t
greh	md/md_wqe.h	/^        struct grehdr   *greh;$/;"	m	language:C++	union:mpp_control::__anon3	typeref:struct:mpp_control::__anon3::grehdr
grekey	md/md_wqe.h	/^        uint32_t grekey; \/* cdma *\/$/;"	m	language:C++	union:mpp_control::__anon4
grp_acl	md/md_ifgrp.h	/^    if_grp_acl_callback     grp_acl[2][MAX_GRP_ACL];     \/* two group, one for use,  the other for backup *\/$/;"	m	language:C++	struct:if_grp_work_t
grp_member	md/md_ifgrp.h	/^    if_grp_member           grp_member;     \/* interface group member *\/$/;"	m	language:C++	struct:iif_grp_t
grp_work	md/md_ifgrp.h	/^    if_grp_work             grp_work;       \/* interface group work *\/$/;"	m	language:C++	struct:copyto_grp_t
grp_work	md/md_ifgrp.h	/^    if_grp_work             grp_work;       \/* interface group work *\/$/;"	m	language:C++	struct:iif_grp_t
gsdata	md/md_init.c	/^struct mpp_shared_data *gsdata;$/;"	v	language:C	typeref:struct:mpp_shared_data
gtph	md/md_wqe.h	/^        struct gtphdr   *gtph;$/;"	m	language:C++	union:mpp_control::__anon3	typeref:struct:mpp_control::__anon3::gtphdr
hash	md/md_ifgrp.h	/^    uint8_t                 hash;$/;"	m	language:C++	struct:oif_grp_t
help	libcli/libcli.h	/^    char *help;$/;"	m	language:C++	struct:cli_command
help	libcli/libcli.h	/^    char *help;$/;"	m	language:C++	struct:cli_filter_cmds
hijacked	md/md_if.h	/^            uint64_t     hijacked                   :7; $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
history	libcli/Doc/usersguide.html	/^<H2><A NAME="history">History<\/A><\/H2>$/;"	a	language:HTML
history	libcli/libcli.h	/^    char *history[MAX_HISTORY];$/;"	m	language:C++	struct:cli_def
hostname	libcli/libcli.h	/^    char *hostname;$/;"	m	language:C++	struct:cli_def
idle_timeout	libcli/libcli.h	/^    unsigned int idle_timeout;$/;"	m	language:C++	struct:cli_def
if_get_if_iifgrp	md/md_if.c	/^int if_get_if_iifgrp( uint8_t ipif, uint8_t *ifgrp)$/;"	f	language:C	signature:( uint8_t ipif, uint8_t *ifgrp)
if_get_if_link	md/md_if.c	/^int if_get_if_link( uint8_t ipif, uint8_t *link)$/;"	f	language:C	signature:( uint8_t ipif, uint8_t *link)
if_get_if_online	md/md_if.c	/^int if_get_if_online( uint8_t ipif, uint8_t *online)$/;"	f	language:C	signature:( uint8_t ipif, uint8_t *online)
if_get_if_phy	md/md_if.c	/^int if_get_if_phy( uint8_t ipif, uint8_t *link)$/;"	f	language:C	signature:( uint8_t ipif, uint8_t *link)
if_get_if_weight	md/md_if.c	/^int if_get_if_weight( uint8_t ipif, uint8_t *weight)$/;"	f	language:C	signature:( uint8_t ipif, uint8_t *weight)
if_group	md/md_init.h	/^    mpp_if_group            if_group;$/;"	m	language:C++	struct:mpp_shared_data
if_grp_acl_callback	md/md_ifgrp.h	/^typedef int  (* if_grp_acl_callback) ( cvmx_wqe_t *work,  struct mpp_control *mpp );$/;"	t	language:C++
if_grp_id	md/md_ifgrp.h	/^    uint32_t                if_grp_id;           \/* interface group index *\/$/;"	m	language:C++	struct:oif_grp_t
if_grp_id	md/md_ifgrp.h	/^    uint32_t                if_grp_id;      \/* interface group index *\/$/;"	m	language:C++	struct:copyto_grp_t
if_grp_id	md/md_ifgrp.h	/^    uint32_t                if_grp_id;      \/* interface group index *\/$/;"	m	language:C++	struct:iif_grp_t
if_grp_member	md/md_ifgrp.h	/^}if_grp_member;$/;"	t	language:C++	typeref:struct:if_grp_member_t
if_grp_member_t	md/md_ifgrp.h	/^typedef struct if_grp_member_t$/;"	s	language:C++
if_grp_port_num	md/md_ifgrp.h	/^    uint32_t                if_grp_port_num;    \/* port number in a interface group *\/$/;"	m	language:C++	struct:if_grp_member_t
if_grp_work	md/md_ifgrp.h	/^}if_grp_work;$/;"	t	language:C++	typeref:struct:if_grp_work_t
if_grp_work_t	md/md_ifgrp.h	/^typedef struct if_grp_work_t$/;"	s	language:C++
if_grp_work_table	md/md_ifgrp.h	/^}if_grp_work_table;$/;"	t	language:C++	typeref:struct:if_grp_work_table_t
if_grp_work_table_t	md/md_ifgrp.h	/^typedef struct if_grp_work_table_t$/;"	s	language:C++
if_set_if_iifgrp	md/md_if.c	/^int if_set_if_iifgrp ( uint8_t ipif, uint8_t ifgrp )$/;"	f	language:C	signature:( uint8_t ipif, uint8_t ifgrp )
if_set_if_link	md/md_if.c	/^int if_set_if_link ( uint8_t ipif, uint8_t flag )$/;"	f	language:C	signature:( uint8_t ipif, uint8_t flag )
if_set_if_online	md/md_if.c	/^int if_set_if_online ( uint8_t ipif, uint8_t online )$/;"	f	language:C	signature:( uint8_t ipif, uint8_t online )
if_set_if_phy	md/md_if.c	/^int if_set_if_phy( uint8_t ipif, uint8_t link)$/;"	f	language:C	signature:( uint8_t ipif, uint8_t link)
if_set_if_weight	md/md_if.c	/^int if_set_if_weight ( uint8_t ipif, uint8_t weight )$/;"	f	language:C	signature:( uint8_t ipif, uint8_t weight )
if_stat	md/md_if.h	/^            mpp_if_stat   if_stat[MAX_CORE_NUM];    \/* interface statistics *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
if_type	md/md_if.h	/^            uint64_t     if_type                    :2;   \/* interface physical attribute, such as lan, wan*\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
ifgrp_work	cli/ifgrp_cli.c	/^char *ifgrp_work[MD_IF_GRP_WORK_MAX] = $/;"	v	language:C
ifmask	md/md_ifgrp.h	/^    IF_MASK_T                ifmask[IF_MASK_NUM];   \/* interface mask*\/$/;"	m	language:C++	struct:if_grp_member_t
ifmask	md/md_ifgrp.h	/^    IF_MASK_T               ifmask[IF_MASK_NUM];      \/* interface mask  *\/$/;"	m	language:C++	struct:oif_grp_t
ifname_index	md/md_if.h	/^            uint64_t     ifname_index               :3;   \/* interface name index *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
iif_group	md/md_ifgrp.h	/^    iif_grp             iif_group[IF_GROUP_NUM];$/;"	m	language:C++	struct:mpp_if_group_t
iif_grp	md/md_ifgrp.h	/^}iif_grp;$/;"	t	language:C++	typeref:struct:iif_grp_t
iif_grp_t	md/md_ifgrp.h	/^typedef struct iif_grp_t$/;"	s	language:C++
iifgrp	md/md_if.h	/^            uint64_t     iifgrp                     :8;   \/*interface bind to input interface group *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
iifgrp_cmd_add	cli/ifgrp_cli.c	/^static int iifgrp_cmd_add (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
iifgrp_cmd_bind_work	cli/ifgrp_cli.c	/^static int iifgrp_cmd_bind_work (struct cli_def *cli, char *command, char *argv[], int argc, int flag)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc, int flag)
iifgrp_cmd_del	cli/ifgrp_cli.c	/^static int iifgrp_cmd_del (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
iifgrp_cmd_del_all	cli/ifgrp_cli.c	/^static int iifgrp_cmd_del_all (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
iifgrp_cmd_del_init	cli/ifgrp_cli.c	/^int iifgrp_cmd_del_init( struct cli_def *cli, struct cli_command *root)$/;"	f	language:C	signature:( struct cli_def *cli, struct cli_command *root)
iifgrp_cmd_init	cli/ifgrp_cli.c	/^int iifgrp_cmd_init( struct cli_def *cli)$/;"	f	language:C	signature:( struct cli_def *cli)
iifgrp_cmd_restore_priority	cli/ifgrp_cli.c	/^static int iifgrp_cmd_restore_priority (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
iifgrp_cmd_set_priority	cli/ifgrp_cli.c	/^static int iifgrp_cmd_set_priority (struct cli_def *cli, char *command, char *argv[], int argc, int flag)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc, int flag)
iifgrp_cmd_show	cli/ifgrp_cli.c	/^static int iifgrp_cmd_show (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
iifgrp_cmd_show_all	cli/ifgrp_cli.c	/^static int iifgrp_cmd_show_all (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
iifgrp_cmd_show_init	cli/ifgrp_cli.c	/^int iifgrp_cmd_show_init( struct cli_def *cli, struct cli_command *root)$/;"	f	language:C	signature:( struct cli_def *cli, struct cli_command *root)
iifgrp_cmd_unbind_work	cli/ifgrp_cli.c	/^static int iifgrp_cmd_unbind_work (struct cli_def *cli, char *command, char *argv[], int argc, int flag)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc, int flag)
iifgrp_show_one	cli/ifgrp_cli.c	/^void iifgrp_show_one(struct cli_def *cli, uint8_t grp_id)$/;"	f	language:C	signature:(struct cli_def *cli, uint8_t grp_id)
ilif	md/md_wqe.h	/^    uint8_t  ilif;             \/* ingress logical interface  *\/$/;"	m	language:C++	struct:mpp_control
in	md/md_embrave.h	/^    int  in,out,count;$/;"	m	language:C++	struct:__anon15
index	md/md_if.h	/^            uint64_t     index                      :5;   \/* index number, like slot\/card\/index *\/  $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
input_num	md/md_init.h	/^    uint8_t                 input_num;$/;"	m	language:C++	struct:mpp_shared_data
interface_cmd_init	cli/if_cli.c	/^int interface_cmd_init( struct cli_def *cli)$/;"	f	language:C	signature:( struct cli_def *cli)
interface_cmd_link	cli/if_cli.c	/^static int interface_cmd_link (struct cli_def *cli, char *command, char *argv[], int argc, int flag)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc, int flag)
interface_cmd_show	cli/if_cli.c	/^static int interface_cmd_show (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
interface_cmd_show_all	cli/if_cli.c	/^static int interface_cmd_show_all (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
interface_cmd_show_init	cli/if_cli.c	/^int interface_cmd_show_init( struct cli_def *cli, struct cli_command *root)$/;"	f	language:C	signature:( struct cli_def *cli, struct cli_command *root)
interface_show_one	cli/if_cli.c	/^int interface_show_one(struct cli_def *cli, uint8_t if_id)$/;"	f	language:C	signature:(struct cli_def *cli, uint8_t if_id)
ipd_port	md/md_if.h	/^            uint64_t     ipd_port                   :16;  \/* packet port *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
ipif	md/md_wqe.h	/^    uint8_t  ipif;   \/* logic port number *\/$/;"	m	language:C++	struct:mpp_control
join_words	libcli/libcli.c	/^static char *join_words(int argc, char **argv)$/;"	f	language:C	file:	signature:(int argc, char **argv)
l_opt_arg	cli/cli_main.c	/^char *l_opt_arg;$/;"	v	language:C
last_action	libcli/libcli.h	/^    time_t last_action;$/;"	m	language:C++	struct:cli_def
len_header	md/md_wqe.h	/^    uint8_t  len_header;  \/* ip head offset *\/$/;"	m	language:C++	struct:mpp_control
link	md/md_if.h	/^            uint64_t     link                       :1;   \/* interface link status, 1 for link up, 0 for link down *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
listenAddr	cli/cli_cmd.c	/^static struct sockaddr_in listenAddr;$/;"	v	language:C	typeref:struct:sockaddr_in	file:
listenSock	cli/cli_cmd.c	/^int listenSock;$/;"	v	language:C
load_flag	md/md_if.h	/^            uint64_t     load_flag                  :2;   \/* interface upload or download flag *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
longopts	cli/cli_main.c	/^struct option longopts[] = {$/;"	v	language:C	typeref:struct:option
loop_if_monitor	cli/cli_cmd.c	/^int loop_if_monitor( void )$/;"	f	language:C	signature:( void )
loop_server	cli/cli_cmd.c	/^int loop_server( void )$/;"	f	language:C	signature:( void )
mac_mask	md/md_if.h	/^            uint64_t     mac_mask                   :16;  $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
main	cli/cli_main.c	/^int main (int argc, char *argv[])$/;"	f	language:C	signature:(int argc, char *argv[])
main	mp/mp_main.c	/^int main( int argc, char *argv[] )$/;"	f	language:C	signature:( int argc, char *argv[] )
master	md/md_ifgrp.h	/^    uint32_t                master;         \/* indicate which acl table in using *\/$/;"	m	language:C++	struct:if_grp_work_t
master	md/md_ifgrp.h	/^    uint8_t                 master;       \/* indicate which up port is using *\/$/;"	m	language:C++	struct:oif_grp_t
match	libcli/libcli.c	/^    } match;$/;"	m	language:C	struct:cli_match_filter_state	typeref:union:cli_match_filter_state::__anon1	file:
matched	libcli/libcli.c	/^    int matched;$/;"	m	language:C	struct:cli_range_filter_state	file:
mc_main_procs_packet_data	md/md_rule.c	/^static int mc_main_procs_packet_data ( cvmx_wqe_t *work,  struct mpp_control *mpp )$/;"	f	language:C	file:	signature:( cvmx_wqe_t *work, struct mpp_control *mpp )
mc_main_protocol_analysis	md/md_rule.c	/^static int mc_main_protocol_analysis ( cvmx_wqe_t *work,  struct mpp_control *mpp )$/;"	f	language:C	file:	signature:( cvmx_wqe_t *work, struct mpp_control *mpp )
md_acl	md/md_ifgrp.h	/^    if_grp_acl_callback     *md_acl;        \/* md operate acl priority pointer, physical address *\/$/;"	m	language:C++	struct:if_grp_work_t
md_cifgrp_bind_work	md/md_ifgrp.c	/^int md_cifgrp_bind_work(uint8_t grp_id, md_ifgrp_work_t work, int priority)$/;"	f	language:C	signature:(uint8_t grp_id, md_ifgrp_work_t work, int priority)
md_cifgrp_get	md/md_ifgrp.c	/^int md_cifgrp_get(uint8_t grp_id, copyto_grp *grp)$/;"	f	language:C	signature:(uint8_t grp_id, copyto_grp *grp)
md_cifgrp_retore_work	md/md_ifgrp.c	/^int md_cifgrp_retore_work(uint8_t grp_id)$/;"	f	language:C	signature:(uint8_t grp_id)
md_cifgrp_unbind_work	md/md_ifgrp.c	/^int md_cifgrp_unbind_work(uint8_t grp_id, md_ifgrp_work_t work)$/;"	f	language:C	signature:(uint8_t grp_id, md_ifgrp_work_t work)
md_embrave_start	md/md_embrave.c	/^int md_embrave_start(uint8_t num)$/;"	f	language:C	signature:(uint8_t num)
md_enabrave_init	md/md_embrave.c	/^int md_enabrave_init(void)$/;"	f	language:C	signature:(void)
md_get_shm	md/md_shm.c	/^int md_get_shm(void)$/;"	f	language:C	signature:(void)
md_if_grp_search_work_table	md/md_ifgrp.c	/^int md_if_grp_search_work_table(if_grp_acl_callback acl_callback, uint8_t *index)$/;"	f	language:C	signature:(if_grp_acl_callback acl_callback, uint8_t *index)
md_if_init	md/md_if.c	/^int md_if_init(void)$/;"	f	language:C	signature:(void)
md_if_status_loop	md/md_if.c	/^void md_if_status_loop(void)$/;"	f	language:C	signature:(void)
md_ifgrp_get_copytogrp	md/md_ifgrp.c	/^copyto_grp *md_ifgrp_get_copytogrp(uint8_t grp_id)$/;"	f	language:C	signature:(uint8_t grp_id)
md_ifgrp_get_copytogrp_work	md/md_ifgrp.c	/^if_grp_work *md_ifgrp_get_copytogrp_work(uint8_t grp_id)$/;"	f	language:C	signature:(uint8_t grp_id)
md_ifgrp_get_epif	md/md_ifgrp.c	/^mpp_epif_entry * md_ifgrp_get_epif(uint8_t if_id)$/;"	f	language:C	signature:(uint8_t if_id)
md_ifgrp_get_iifgrp	md/md_ifgrp.c	/^iif_grp *md_ifgrp_get_iifgrp(uint8_t grp_id)$/;"	f	language:C	signature:(uint8_t grp_id)
md_ifgrp_get_iifgrp_work	md/md_ifgrp.c	/^if_grp_work *md_ifgrp_get_iifgrp_work(uint8_t grp_id)$/;"	f	language:C	signature:(uint8_t grp_id)
md_ifgrp_get_oifgrp	md/md_ifgrp.c	/^oif_grp *md_ifgrp_get_oifgrp(uint8_t grp_id)$/;"	f	language:C	signature:(uint8_t grp_id)
md_ifgrp_get_work_table	md/md_ifgrp.c	/^if_grp_work_table *md_ifgrp_get_work_table(uint8_t priority)$/;"	f	language:C	signature:(uint8_t priority)
md_ifgrp_get_work_table_head	md/md_ifgrp.c	/^if_grp_work_table *md_ifgrp_get_work_table_head(void)$/;"	f	language:C	signature:(void)
md_ifgrp_work_register	md/md_ifgrp.c	/^int md_ifgrp_work_register(md_ifgrp_work_t work, if_grp_acl_callback acl_callback)$/;"	f	language:C	signature:(md_ifgrp_work_t work, if_grp_acl_callback acl_callback)
md_ifgrp_work_t	md/md_ifgrp.h	/^}md_ifgrp_work_t;$/;"	t	language:C++	typeref:enum:__anon17
md_iifgrp_add	md/md_ifgrp.c	/^int md_iifgrp_add(uint8_t grp_id, uint8_t if_id)$/;"	f	language:C	signature:(uint8_t grp_id, uint8_t if_id)
md_iifgrp_bind_work	md/md_ifgrp.c	/^int md_iifgrp_bind_work(uint8_t grp_id, md_ifgrp_work_t work, int priority)$/;"	f	language:C	signature:(uint8_t grp_id, md_ifgrp_work_t work, int priority)
md_iifgrp_del	md/md_ifgrp.c	/^int md_iifgrp_del(uint8_t grp_id, uint8_t if_id)$/;"	f	language:C	signature:(uint8_t grp_id, uint8_t if_id)
md_iifgrp_get	md/md_ifgrp.c	/^int md_iifgrp_get(uint8_t grp_id, iif_grp *grp)$/;"	f	language:C	signature:(uint8_t grp_id, iif_grp *grp)
md_iifgrp_retore_work	md/md_ifgrp.c	/^int md_iifgrp_retore_work(uint8_t grp_id)$/;"	f	language:C	signature:(uint8_t grp_id)
md_iifgrp_unbind_work	md/md_ifgrp.c	/^int md_iifgrp_unbind_work(uint8_t grp_id, md_ifgrp_work_t work)$/;"	f	language:C	signature:(uint8_t grp_id, md_ifgrp_work_t work)
md_init	md/md_init.c	/^int md_init(void)$/;"	f	language:C	signature:(void)
md_mk_shm	md/md_shm.c	/^int md_mk_shm(void)$/;"	f	language:C	signature:(void)
md_oifgrp_add	md/md_ifgrp.c	/^int md_oifgrp_add(uint8_t grp_id, uint8_t if_id)$/;"	f	language:C	signature:(uint8_t grp_id, uint8_t if_id)
md_oifgrp_add_if_to_up_port_array	md/md_ifgrp.c	/^int md_oifgrp_add_if_to_up_port_array(oif_grp_up_port_member *up_port, int if_id, int weight)$/;"	f	language:C	signature:(oif_grp_up_port_member *up_port, int if_id, int weight)
md_oifgrp_del	md/md_ifgrp.c	/^int md_oifgrp_del(uint8_t grp_id, uint8_t if_id)$/;"	f	language:C	signature:(uint8_t grp_id, uint8_t if_id)
md_oifgrp_del_if_from_up_port_array	md/md_ifgrp.c	/^int md_oifgrp_del_if_from_up_port_array(oif_grp_up_port_member *up_port, int if_id, int weight)$/;"	f	language:C	signature:(oif_grp_up_port_member *up_port, int if_id, int weight)
md_oifgrp_get	md/md_ifgrp.c	/^int md_oifgrp_get(uint8_t grp_id, oif_grp *grp)$/;"	f	language:C	signature:(uint8_t grp_id, oif_grp *grp)
md_oifgrp_modify_if_to_up_port_array	md/md_ifgrp.c	/^int md_oifgrp_modify_if_to_up_port_array(oif_grp_up_port_member *up_port, int if_id, int weight_new, int weight_old)$/;"	f	language:C	signature:(oif_grp_up_port_member *up_port, int if_id, int weight_new, int weight_old)
md_oifgrp_set_hash	md/md_ifgrp.c	/^int md_oifgrp_set_hash(uint8_t grp_id, oif_grp_hash hash)$/;"	f	language:C	signature:(uint8_t grp_id, oif_grp_hash hash)
md_oifgrp_set_mode	md/md_ifgrp.c	/^int md_oifgrp_set_mode(uint8_t grp_id, oif_grp_mode mode)$/;"	f	language:C	signature:(uint8_t grp_id, oif_grp_mode mode)
md_pkt_sts	md/md_sts.h	/^}md_pkt_sts;$/;"	t	language:C++	typeref:struct:md_pkt_sts_t
md_pkt_sts_t	md/md_sts.h	/^typedef struct md_pkt_sts_t$/;"	s	language:C++
md_pkt_type	md/md_rule.h	/^}md_pkt_type;$/;"	t	language:C++	typeref:enum:__anon16
md_return_t	md/md_type.h	/^} md_return_t;$/;"	t	language:C++	typeref:enum:__anon6
md_rule_acl_work	md/md_rule.c	/^int md_rule_acl_work(cvmx_wqe_t *work, struct mpp_control *mpp)$/;"	f	language:C	signature:(cvmx_wqe_t *work, struct mpp_control *mpp)
md_rule_action	md/md_rule.c	/^}md_rule_action;$/;"	t	language:C	typeref:enum:__anon18	file:
md_rule_ip_work	md/md_rule.c	/^int md_rule_ip_work(cvmx_wqe_t *work, struct mpp_control *mpp)$/;"	f	language:C	signature:(cvmx_wqe_t *work, struct mpp_control *mpp)
md_rule_payload_work	md/md_rule.c	/^int md_rule_payload_work(cvmx_wqe_t *work, struct mpp_control *mpp)$/;"	f	language:C	signature:(cvmx_wqe_t *work, struct mpp_control *mpp)
md_rule_string_work	md/md_rule.c	/^int md_rule_string_work(cvmx_wqe_t *work, struct mpp_control *mpp)$/;"	f	language:C	signature:(cvmx_wqe_t *work, struct mpp_control *mpp)
md_rule_work_copy_to_process	md/md_rule.c	/^int md_rule_work_copy_to_process(cvmx_wqe_t *work, struct mpp_control *mpp, uint8_t ifgrp)$/;"	f	language:C	signature:(cvmx_wqe_t *work, struct mpp_control *mpp, uint8_t ifgrp)
md_rule_work_process	md/md_rule.c	/^int md_rule_work_process(if_grp_work *grp_work, cvmx_wqe_t *work, struct mpp_control *mpp)$/;"	f	language:C	signature:(if_grp_work *grp_work, cvmx_wqe_t *work, struct mpp_control *mpp)
md_rule_work_table_init	md/md_rule.c	/^int md_rule_work_table_init(void)$/;"	f	language:C	signature:(void)
md_sts_clear	md/md_sts.c	/^int md_sts_clear(void )$/;"	f	language:C	signature:(void )
md_sts_free_add	md/md_sts.c	/^void md_sts_free_add(void)$/;"	f	language:C	signature:(void)
md_sts_get	md/md_sts.c	/^int  md_sts_get(md_pkt_sts *sts)$/;"	f	language:C	signature:(md_pkt_sts *sts)
md_sts_get_add	md/md_sts.c	/^void md_sts_get_add(void)$/;"	f	language:C	signature:(void)
md_sts_init	md/md_sts.c	/^int md_sts_init(void)$/;"	f	language:C	signature:(void)
md_update_oifgrp_up_port_array	md/md_ifgrp.c	/^int md_update_oifgrp_up_port_array(int if_id, uint8_t link)$/;"	f	language:C	signature:(int if_id, uint8_t link)
mdu_acl	md/md_ifgrp.h	/^    if_grp_acl_callback     *mdu_acl;       \/* mdu operate acl priority pointer, application address *\/$/;"	m	language:C++	struct:if_grp_work_t
mirrif	md/md_wqe.h	/^    uint8_t  mirrif;$/;"	m	language:C++	struct:mpp_control
mode	libcli/libcli.h	/^    int mode;$/;"	m	language:C++	struct:cli_command
mode	libcli/libcli.h	/^    int mode;$/;"	m	language:C++	struct:cli_def
mode	md/md_if.h	/^            uint64_t     mode                       :3;   \/* interface mode,such as inline, inline_server, sniffer,user integrality and so on*\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
mode	md/md_ifgrp.h	/^    uint8_t                 mode;$/;"	m	language:C++	struct:oif_grp_t
modestring	libcli/libcli.h	/^    char *modestring;$/;"	m	language:C++	struct:cli_def
monitor_flag	md/md_if.h	/^            uint64_t     monitor_flag               :1;   \/* interface status loop enable flag *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
mpp_control	md/md_wqe.h	/^struct mpp_control$/;"	s	language:C++
mpp_epif_entry	md/md_if.h	/^} CVMX_CACHE_LINE_ALIGNED mpp_epif_entry;$/;"	t	language:C++	typeref:struct:mpp_epif_entry_t
mpp_epif_entry_t	md/md_if.h	/^typedef struct mpp_epif_entry_t$/;"	s	language:C++
mpp_free_wqe_packet_data	md/md_embrave.c	/^void mpp_free_wqe_packet_data ( cvmx_wqe_t *work )$/;"	f	language:C	signature:( cvmx_wqe_t *work )
mpp_if_group	md/md_ifgrp.h	/^}mpp_if_group;$/;"	t	language:C++	typeref:struct:mpp_if_group_t
mpp_if_group_t	md/md_ifgrp.h	/^typedef struct mpp_if_group_t$/;"	s	language:C++
mpp_if_stat	md/md_if.h	/^} mpp_if_stat;$/;"	t	language:C++	typeref:struct:mpp_if_stat_t
mpp_if_stat_t	md/md_if.h	/^typedef struct mpp_if_stat_t$/;"	s	language:C++
mpp_ifgrp_init	md/md_ifgrp.c	/^int  mpp_ifgrp_init(void)$/;"	f	language:C	signature:(void)
mpp_shared_data	md/md_init.h	/^typedef struct mpp_shared_data$/;"	s	language:C++
mtu	md/md_if.h	/^            uint64_t     mtu                        :16;  $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
next	libcli/libcli.h	/^    struct cli_command *next;$/;"	m	language:C++	struct:cli_command	typeref:struct:cli_command::cli_command
next	libcli/libcli.h	/^    struct cli_filter *next;$/;"	m	language:C++	struct:cli_filter	typeref:struct:cli_filter::cli_filter
next	libcli/libcli.h	/^    struct unp *next;$/;"	m	language:C++	struct:unp	typeref:struct:unp::unp
oif_group	md/md_ifgrp.h	/^    oif_grp             oif_group[IF_GROUP_NUM];$/;"	m	language:C++	struct:mpp_if_group_t
oif_grp	md/md_ifgrp.h	/^}oif_grp;$/;"	t	language:C++	typeref:struct:oif_grp_t
oif_grp_hash	md/md_ifgrp.h	/^}oif_grp_hash;$/;"	t	language:C++	typeref:enum:oif_grp_hash_t
oif_grp_hash_string	cli/ifgrp_cli.c	/^char *oif_grp_hash_string[OIF_GRP_HASH_MAX] =$/;"	v	language:C
oif_grp_hash_t	md/md_ifgrp.h	/^typedef enum oif_grp_hash_t$/;"	g	language:C++
oif_grp_mode	md/md_ifgrp.h	/^}oif_grp_mode;$/;"	t	language:C++	typeref:enum:oif_grp_mode_t
oif_grp_mode_string	cli/ifgrp_cli.c	/^char *oif_grp_mode_string[OIF_GRP_MODE_MAX] =$/;"	v	language:C
oif_grp_mode_t	md/md_ifgrp.h	/^typedef enum oif_grp_mode_t$/;"	g	language:C++
oif_grp_t	md/md_ifgrp.h	/^typedef struct oif_grp_t$/;"	s	language:C++
oif_grp_up_port_member	md/md_ifgrp.h	/^}oif_grp_up_port_member;$/;"	t	language:C++	typeref:struct:oif_grp_up_port_member_t
oif_grp_up_port_member_t	md/md_ifgrp.h	/^typedef struct oif_grp_up_port_member_t$/;"	s	language:C++
oifgrp_cmd_add	cli/ifgrp_cli.c	/^static int oifgrp_cmd_add (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
oifgrp_cmd_del	cli/ifgrp_cli.c	/^static int oifgrp_cmd_del (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
oifgrp_cmd_del_all	cli/ifgrp_cli.c	/^static int oifgrp_cmd_del_all (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
oifgrp_cmd_del_init	cli/ifgrp_cli.c	/^int oifgrp_cmd_del_init( struct cli_def *cli, struct cli_command *root)$/;"	f	language:C	signature:( struct cli_def *cli, struct cli_command *root)
oifgrp_cmd_init	cli/ifgrp_cli.c	/^int oifgrp_cmd_init( struct cli_def *cli)$/;"	f	language:C	signature:( struct cli_def *cli)
oifgrp_cmd_set_hash	cli/ifgrp_cli.c	/^static int oifgrp_cmd_set_hash (struct cli_def *cli, char *command, char *argv[], int argc, int flag)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc, int flag)
oifgrp_cmd_set_mode	cli/ifgrp_cli.c	/^static int oifgrp_cmd_set_mode (struct cli_def *cli, char *command, char *argv[], int argc, int flag)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc, int flag)
oifgrp_cmd_show	cli/ifgrp_cli.c	/^static int oifgrp_cmd_show (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
oifgrp_cmd_show_all	cli/ifgrp_cli.c	/^static int oifgrp_cmd_show_all (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
oifgrp_cmd_show_init	cli/ifgrp_cli.c	/^int oifgrp_cmd_show_init( struct cli_def *cli, struct cli_command *root)$/;"	f	language:C	signature:( struct cli_def *cli, struct cli_command *root)
oifgrp_show_one	cli/ifgrp_cli.c	/^void oifgrp_show_one(struct cli_def *cli, uint8_t grp_id)$/;"	f	language:C	signature:(struct cli_def *cli, uint8_t grp_id)
online	md/md_if.h	/^            uint64_t     online                     :1;   \/* online flag*\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
out	md/md_embrave.h	/^    int  in,out,count;$/;"	m	language:C++	struct:__anon15
pQ	md/md_init.h	/^    queue                   pQ;$/;"	m	language:C++	struct:mpp_shared_data
packet	md/md_wqe.h	/^    uint8_t *packet;$/;"	m	language:C++	struct:mpp_control
packet_data	md/md_wqe.h	/^    uint8_t packet_data[96];$/;"	m	language:C++	struct:__anon2
packet_data	md/md_wqe.h	/^    uint8_t packet_data[96];$/;"	m	language:C++	struct:__anon5
packet_ptr	md/md_wqe.h	/^    cvmx_buf_ptr_t             packet_ptr;$/;"	m	language:C++	struct:__anon2
parent	libcli/libcli.h	/^    struct cli_command *parent;$/;"	m	language:C++	struct:cli_command	typeref:struct:cli_command::cli_command
pass_matches	libcli/libcli.c	/^int pass_matches(char *pass, char *try)$/;"	f	language:C	signature:(char *pass, char *try)
password	libcli/libcli.h	/^    char *password;$/;"	m	language:C++	struct:unp
pkt_type	md/md_wqe.h	/^    char pkt_type;$/;"	m	language:C++	struct:mpp_control
port	md/md_wqe.h	/^    uint8_t port;$/;"	m	language:C++	struct:__anon5
port_num	md/md_if.h	/^            uint64_t     port_num                   :8;   \/* logical interface number *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
port_num	md/md_ifgrp.h	/^    uint32_t                port_num;            \/* port number in a interface group *\/$/;"	m	language:C++	struct:oif_grp_t
print_callback	libcli/libcli.h	/^    void (*print_callback)(struct cli_def *cli, char *string);$/;"	m	language:C++	struct:cli_def
priority	md/md_ifgrp.h	/^    uint8_t                 priority[MAX_GRP_ACL];       \/* acl work default priority *\/$/;"	m	language:C++	struct:if_grp_work_t
priority	md/md_ifgrp.h	/^    uint8_t priority;   \/* default priority *\/$/;"	m	language:C++	struct:if_grp_work_table_t
privilege	libcli/libcli.h	/^    int privilege;$/;"	m	language:C++	struct:cli_command
privilege	libcli/libcli.h	/^    int privilege;$/;"	m	language:C++	struct:cli_def
process_work	md/md_rule.c	/^static inline void process_work ( cvmx_wqe_t *work )$/;"	f	language:C	file:	signature:( cvmx_wqe_t *work )
promptchar	libcli/libcli.h	/^    char *promptchar;$/;"	m	language:C++	struct:cli_def
qos_en	md/md_if.h	/^            uint64_t     qos_en                     :1;   \/* reserved *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
qos_id	md/md_if.h	/^            uint64_t     qos_id                     :16;  \/* reserved *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
queue	md/md_embrave.h	/^}queue;$/;"	t	language:C++	typeref:struct:__anon15
re	libcli/libcli.c	/^        regex_t re;$/;"	m	language:C	union:cli_match_filter_state::__anon1	file:
read	libcli/libcli.c	/^int read(int fd, void *buf, unsigned int count) {$/;"	f	language:C	signature:(int fd, void *buf, unsigned int count)
regcomp	libcli/libcli.c	88;"	d	language:C	file:
regex_dummy	libcli/libcli.c	/^int regex_dummy() {return 0;};$/;"	f	language:C
regex_t	libcli/libcli.c	89;"	d	language:C	file:
regexec	libcli/libcli.c	87;"	d	language:C	file:
regfree	libcli/libcli.c	86;"	d	language:C	file:
regular_callback	cli/cli_cmd.c	/^int regular_callback(struct cli_def *cli)$/;"	f	language:C	signature:(struct cli_def *cli)
regular_callback	libcli/libcli.h	/^    int (*regular_callback)(struct cli_def *cli);$/;"	m	language:C++	struct:cli_def
regular_count	cli/cli_cmd.c	/^unsigned int regular_count = 0;$/;"	v	language:C
reserved0	md/md_if.h	/^            uint64_t     reserved0                  :56;  \/* reserved *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
rev0	md/md_wqe.h	/^    int16_t  rev0;$/;"	m	language:C++	struct:mpp_control
rule_work	md/md_rule.c	/^int rule_work(cvmx_wqe_t *work, struct mpp_control *mpp)$/;"	f	language:C	signature:(cvmx_wqe_t *work, struct mpp_control *mpp)
rx_bps	md/md_if.h	/^            uint64_t        rx_bps;         \/* the size of received packets in bits per second *\/$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
rx_bytes	md/md_if.h	/^            int64_t         rx_bytes;       \/* the size of received pakcets in bytes now*\/$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
rx_bytes_pre	md/md_if.h	/^            uint64_t        rx_bytes_pre;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
rx_en	md/md_if.h	/^            uint64_t     rx_en                      :1;   \/* flag rx statistics enable\/disable *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
rx_max_bps	md/md_if.h	/^            uint64_t        rx_max_bps;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
rx_max_pps	md/md_if.h	/^            uint64_t        rx_max_pps;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
rx_pkts	md/md_if.h	/^            int64_t         rx_pkts;        \/* the number of received pakcets now *\/$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
rx_pkts_pre	md/md_if.h	/^            uint64_t        rx_pkts_pre;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
rx_pps	md/md_if.h	/^            uint64_t        rx_pps;         \/* the number of received pakets per second *\/$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
service	libcli/libcli.h	/^    void *service;$/;"	m	language:C++	struct:cli_def
session_type	md/md_wqe.h	/^    uint8_t  session_type;$/;"	m	language:C++	struct:mpp_control
shortopts	cli/cli_main.c	/^static const char *shortopts = "hd";$/;"	v	language:C	file:
show_prompt	libcli/libcli.c	/^int show_prompt(struct cli_def *cli, int sockfd)$/;"	f	language:C	signature:(struct cli_def *cli, int sockfd)
showprompt	libcli/libcli.h	/^    char showprompt;$/;"	m	language:C++	struct:cli_def
shutdown	md/md_if.h	/^            uint64_t     shutdown                   :1;   \/* interface shutdown, 1 for shutdown; 0 for not shutdown *\/ $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
slot	md/md_if.h	/^            uint64_t     slot                       :4;   \/* slot number , like slot\/card\/index *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
speed	md/md_if.h	/^            uint64_t     speed                      :3;   \/* interface speed *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
ssn	md/md_wqe.h	/^    struct mpp_ssn *ssn;$/;"	m	language:C++	struct:mpp_control	typeref:struct:mpp_control::mpp_ssn
ssn_index	md/md_wqe.h	/^    uint32_t ssn_index;$/;"	m	language:C++	struct:mpp_control
ssn_ip	md/md_wqe.h	/^    int32_t  ssn_ip;$/;"	m	language:C++	struct:mpp_control
state	libcli/libcli.h	/^    int state;$/;"	m	language:C++	struct:cli_def
string	libcli/libcli.c	/^        char *string;$/;"	m	language:C	union:cli_match_filter_state::__anon1	file:
string	libcli/libcli.c	/^int cli_match_filter(UNUSED(struct cli_def *cli), char *string, void *data)$/;"	v	language:C
string	libcli/libcli.c	/^int cli_range_filter(UNUSED(struct cli_def *cli), char *string, void *data)$/;"	v	language:C
sts	md/md_init.h	/^    md_pkt_sts              sts;$/;"	m	language:C++	struct:mpp_shared_data
sts_cmd_clear	cli/sts_cli.c	/^static int sts_cmd_clear (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
sts_cmd_get	cli/sts_cli.c	/^static int sts_cmd_get (struct cli_def *cli, char *command, char *argv[], int argc)$/;"	f	language:C	file:	signature:(struct cli_def *cli, char *command, char *argv[], int argc)
sts_cmd_init	cli/sts_cli.c	/^int sts_cmd_init( struct cli_def *cli)$/;"	f	language:C	signature:( struct cli_def *cli)
subdirs	Makefile	/^subdirs = libcli md mp cli$/;"	m	language:Make
svr_seq	md/md_wqe.h	/^    uint32_t svr_seq;$/;"	m	language:C++	struct:mpp_control
syn_cookie	md/md_wqe.h	/^    uint32_t syn_cookie;$/;"	m	language:C++	struct:mpp_control
tag	md/md_wqe.h	/^    uint32_t  tag;$/;"	m	language:C++	struct:mpp_control
teid	md/md_wqe.h	/^        uint32_t teid;   \/* gn *\/$/;"	m	language:C++	union:mpp_control::__anon4
timeout_tm	libcli/libcli.h	/^    struct timeval timeout_tm;$/;"	m	language:C++	struct:cli_def	typeref:struct:cli_def::timeval
tlli	md/md_wqe.h	/^        uint32_t tlli;   \/* gb *\/$/;"	m	language:C++	union:mpp_control::__anon4
to	libcli/libcli.c	/^    char *to;$/;"	m	language:C	struct:cli_range_filter_state	file:
tuple	md/md_wqe.h	/^    struct mpp_tuple *tuple;$/;"	m	language:C++	struct:mpp_control	typeref:struct:mpp_control::mpp_tuple
tutorial	libcli/Doc/developers.html	/^<H2><A NAME="tutorial">3.0 Tutorial<\/A><\/H2>$/;"	a	language:HTML
tx_bps	md/md_if.h	/^            uint64_t        tx_bps;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
tx_bytes	md/md_if.h	/^            int64_t         tx_bytes;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
tx_bytes_pre	md/md_if.h	/^            uint64_t        tx_bytes_pre;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
tx_en	md/md_if.h	/^            uint64_t     tx_en                      :1;   \/* flag tx statistics enable\/disable *\/$/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
tx_max_bps	md/md_if.h	/^            uint64_t        tx_max_bps;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
tx_max_pps	md/md_if.h	/^            uint64_t        tx_max_pps;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
tx_pkts	md/md_if.h	/^            int64_t         tx_pkts;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
tx_pkts_pre	md/md_if.h	/^            uint64_t        tx_pkts_pre;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
tx_pps	md/md_if.h	/^            uint64_t        tx_pps;$/;"	m	language:C++	struct:mpp_if_stat_t::__anon11::__anon12
udph	md/md_wqe.h	/^    struct udphdr *udph;$/;"	m	language:C++	struct:mpp_control	typeref:struct:mpp_control::udphdr
unique_len	libcli/libcli.h	/^    unsigned int unique_len;$/;"	m	language:C++	struct:cli_command
unp	libcli/libcli.h	/^struct unp {$/;"	s	language:C++
up_ifmask	md/md_ifgrp.h	/^    IF_MASK_T               up_ifmask[IF_MASK_NUM];   \/* up interface mask    *\/$/;"	m	language:C++	struct:oif_grp_t
up_port	md/md_ifgrp.h	/^    oif_grp_up_port_member  up_port[2];   \/* up port array, used for tarnsmit the packet *\/$/;"	m	language:C++	struct:oif_grp_t
up_port	md/md_ifgrp.h	/^    uint32_t                up_port[OIF_GRP_UP_PORT_MEMBER_MAX]; \/* link up port logic number *\/$/;"	m	language:C++	struct:oif_grp_up_port_member_t
up_port_num	md/md_ifgrp.h	/^    uint32_t                up_port_num;  \/* link up port number, add the weight, port number of up_port[] array *\/$/;"	m	language:C++	struct:oif_grp_up_port_member_t
user_info_idx	md/md_wqe.h	/^    uint32_t user_info_idx; \/* 3gpp *\/$/;"	m	language:C++	struct:mpp_control
username	libcli/libcli.h	/^    char *username;$/;"	m	language:C++	struct:unp
users	libcli/libcli.h	/^    struct unp *users;$/;"	m	language:C++	struct:cli_def	typeref:struct:cli_def::unp
vasprintf	libcli/libcli.c	/^int vasprintf(char **strp, const char *fmt, va_list args) {$/;"	f	language:C	signature:(char **strp, const char *fmt, va_list args)
vlan	md/md_if.h	/^            uint64_t     vlan                       :16;  \/*default vlan *\/ $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
vlan_act	md/md_wqe.h	/^    uint8_t  vlan_act;            \/* 3:5 *\/$/;"	m	language:C++	struct:mpp_control
weight	md/md_if.h	/^            uint64_t     weight                     :8;  $/;"	m	language:C++	struct:mpp_epif_entry_t::__anon13::__anon14
word0	md/md_wqe.h	/^    ¦   cvmx_wqe_word0_t word0;$/;"	m	language:C++	struct:__anon2
word1	md/md_wqe.h	/^    ¦   cvmx_wqe_word1_t word1;$/;"	m	language:C++	struct:__anon2
word2	md/md_wqe.h	/^    cvmx_pip_wqe_word2_t       word2;$/;"	m	language:C++	struct:__anon2
work_table	md/md_ifgrp.h	/^    if_grp_work_table   work_table[MD_IF_GRP_WORK_MAX];$/;"	m	language:C++	struct:mpp_if_group_t
write	libcli/libcli.c	/^int write(int fd,const void *buf, unsigned int count) {$/;"	f	language:C	signature:(int fd,const void *buf, unsigned int count)
